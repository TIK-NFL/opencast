####
# Profile definitions for the encoding service.
#
# In order to understand how to configure a format, take a look a the
# documentation below:
#
# profile.<format>.name:
#     Name of the format, used in download dialogs of the frontend.
#
# profile.<format>.output:
#     Type of the distribution format.
#     [audio|visual|audiovisual|stream|enhancedaudio|image|imagesequence|cover|nothing]
#
# profile.<format>.suffix:
#     Extension that will be appended to the download.
#
# profile.<format>.mimetype:
#     Mime type used to provide proper content types.
#
# profile.<format>.input:
#     Track types for which this format is applicable.
#     [audio|visual|audiovisual|stream|enhancedaudio|image|imagesequence|cover|nothing]
##

# Distribution format definition for 4 by 3 flash presenter/presentation download
profile.flash.http.name = flash download
profile.flash.http.input = visual
profile.flash.http.output = visual
profile.flash.http.suffix = -15fps.flv
profile.flash.http.mimetype = video/x-flv
profile.flash.http.ffmpeg.command = -i #{in.video.path} -filter:v yadif -r 15 -c:v flv -b 512k -b:a 96k -ar 22050 #{out.dir}/#{out.name}#{out.suffix}

# Distribution format definition for 4 by 3 flash presenter/presentation download
profile.flash-vga.http.name = flash vga download
profile.flash-vga.http.input = visual
profile.flash-vga.http.output = visual
profile.flash-vga.http.suffix = -5fps.flv
profile.flash-vga.http.mimetype = video/x-flv
profile.flash-vga.http.ffmpeg.command = -i #{in.video.path} -r 5 -c:v flv -b 512k -b:a 96k -ar 22050 #{out.dir}/#{out.name}#{out.suffix}

# Audio only (Flash video container)
profile.flash-audio.http.name = flash audio download
profile.flash-audio.http.input = audio
profile.flash-audio.http.output = audio
profile.flash-audio.http.suffix = -5fps.flv
profile.flash-audio.http.mimetype = audio/x-adpcm
profile.flash-audio.http.ffmpeg.command = -i #{in.video.path} -b:a 96k -ar 22050 -vn #{out.dir}/#{out.name}#{out.suffix}

# Format definition for 3 by 4 flash presenter/presentation preview in Matterhorn UIs
profile.flash-preview.http.name = flash preview
profile.flash-preview.http.input = stream
profile.flash-preview.http.output = audiovisual
profile.flash-preview.http.suffix = -10fps-preview.flv
profile.flash-preview.http.mimetype = video/x-flv
profile.flash-preview.http.ffmpeg.command = -i #{in.video.path} -r 10 -s 320x200 -c:v flv -b 256k -ar 11025 #{out.dir}/#{out.name}#{out.suffix}

profile.mp4-preview.http.name = preview video
profile.mp4-preview.http.input = visual
profile.mp4-preview.http.output = visual
profile.mp4-preview.http.suffix = -preview.mp4
profile.mp4-preview.http.mimetype = video/mp4
profile.mp4-preview.http.ffmpeg.command = -i #{in.video.path} -c:v libx264 -filter:v yadif,scale=-1:360,scale=w=trunc(in_w/2)*2:h=trunc(in_h/2)*2 -preset superfast -crf 34  -profile:v baseline -pix_fmt yuv420p -tune film  -movflags faststart -c:a aac -strict -2 -ar 22050 -ab 64k #{out.dir}/#{out.name}#{out.suffix}

# extract raw audio as wav file
profile.audio.wav.name = audio waveform
profile.audio.wav.input = stream
profile.audio.wav.output = audio
profile.audio.wav.suffix = -waveform-audio.wav
profile.audio.wav.mimetype = audio/wav
profile.audio.wav.ffmpeg.command = -i /#{in.video.path} -c:a pcm_s16le -ac 2 #{out.dir}/#{out.name}#{out.suffix}


